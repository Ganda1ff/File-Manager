<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nTJL0QAAAABJRU5ErkJggg==
</value>
  </data>
</root>